model Service {
  id          String         @id @unique @default(uuid())
  serviceName String
  description String
  images      String[]
  price       Float
  success     Success
  successPage String?
  draft       Boolean        @default(true)
  orderNumber Int?
  lastOrderBy String?
  userId      String
  user        User           @relation(fields: [userId], references: [id])
  orders      ServiceOrder[]
}

model ServiceOrder {
  id        String                    @id @unique @default(uuid())
  paymentId String?                   @unique
  serviceId String
  userId    String
  createdAt DateTime                  @default(now())
  status    ServiceOrderStatus        @default(pending)
  payment   PaymentDetailsByServices? @relation(fields: [paymentId], references: [id])
  service   Service                   @relation(fields: [serviceId], references: [id])
  user      User                      @relation("UserServiceOrders", fields: [userId], references: [id])
}

model PaymentDetailsByServices {
  id            String        @id @default(uuid())
  amount        Float
  pi_number     String?
  paymemtStatus PaymemtStatus @default(pending)
  createAt      DateTime      @default(now())
  order         ServiceOrder?
}

enum Success {
  message
  redirect
}

enum ServiceOrderStatus {
  pending
  approved
  rejected
}
