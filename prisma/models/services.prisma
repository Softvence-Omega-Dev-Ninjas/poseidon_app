model Service {
  id          String   @id @unique @default(uuid())
  serviceName String
  description String
  images      String[]
  price       Float
  success     Success
  successPage String?
  draft       Boolean  @default(true)
  orderNumber Int?
  lastOrderBy String?

  scheduling_url String?
  uri            String?

  orders ServiceOrder[]

  userId String
  user   User   @relation(fields: [userId], references: [id])
}

model ServiceOrder {
  id String @id @unique @default(uuid())

  paymentDetails PaymentDetailsByServices?

  serviceId String?
  service   Service? @relation(fields: [serviceId], references: [id])

  userId String?
  user   User?   @relation("UserServiceOrders", fields: [userId], references: [id])
  email  String?

  sellerId String
  seller   User   @relation("ServiceSeller", fields: [sellerId], references: [id])

  createdAt DateTime @default(now())

  scheduling_url String?
  uri            String?

  scheduledEvent ScheduledEvent? @relation(name: "serviceOrderScheduledEvent")
}

model PaymentDetailsByServices {
  id            String        @id @default(uuid())
  amount        Float
  pi_number     String?
  paymemtStatus PaymemtStatus @default(pending)
  createAt      DateTime      @default(now())

  serviceOrderId   String?       @unique
  serviceOrderInfo ServiceOrder? @relation(fields: [serviceOrderId], references: [id])
}

enum Success {
  message
  redirect
}

enum ServiceOrderStatus {
  pending
  approved
  rejected
}
