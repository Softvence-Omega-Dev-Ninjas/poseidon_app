model Conversation {
  id        String   @id @default(uuid())
  user1Id   String
  user2Id   String
  createdAt DateTime @default(now())
  lastMessageAt DateTime?  @default(now())

  user1     User     @relation("User1Conversations", fields: [user1Id], references: [id])
  user2     User     @relation("User2Conversations", fields: [user2Id], references: [id])
  messages  Message[]
   offers    Offer[]
}

model Message {
  id             String      @id @default(uuid())
  text           String
  senderId       String
  receiverId     String
  conversationId String
  isRead         Boolean  @default(false)
  createdAt      DateTime    @default(now())

  sender         User        @relation("SentMessages", fields: [senderId], references: [id])
  receiver       User        @relation("ReceivedMessages", fields: [receiverId], references: [id])
  conversation   Conversation @relation(fields: [conversationId], references: [id])
}


model Offer {
  id             String   @id @default(uuid())
  senderId       String
  receiverId     String
  conversationId String
  message        String
  price          Float
  status         OfferStatus @default(PENDING)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  sender         User     @relation("OfferSender", fields: [senderId], references: [id])
  receiver       User     @relation("OfferReceiver", fields: [receiverId], references: [id])
  conversation   Conversation @relation(fields: [conversationId], references: [id])
}

enum OfferStatus {
  PENDING
  ACCEPTED
  REJECTED
  CANCELLED
}
