model Shop {
  id        String    @id @default(uuid())
  userId    String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  products  Product[]
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Product {
  id                String                     @id @default(uuid())
  name              String
  description       String?
  draft             Boolean                    @default(false)
  price             Float
  images            String[]
  createdAt         DateTime                   @default(now())
  updatedAt         DateTime                   @updatedAt
  shopId            String
  totalSales        Int                        @default(0)
  color             String[]
  features          String[]
  offerPrice        Float?
  successPage       SuccessPage
  successPagefield  String
  orders            Order[]
  shop              Shop                       @relation(fields: [shopId], references: [id], onDelete: Cascade)
  productCategories ProductCategoryOnProduct[]
}

model ProductCategory {
  id                String                     @id @default(uuid())
  name              String
  image             String?
  createdAt         DateTime                   @default(now())
  updatedAt         DateTime                   @updatedAt
  userId            String
  user              User                       @relation(fields: [userId], references: [id])
  productCategories ProductCategoryOnProduct[]
}

model ProductCategoryOnProduct {
  productId  String
  categoryId String
  assignedAt DateTime        @default(now())
  category   ProductCategory @relation(fields: [categoryId], references: [id])
  product    Product         @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@id([productId, categoryId])
}

model Order {
  id                   String                @id @default(uuid())
  fullName             String
  email                String
  country              String
  city                 String
  postCode             String?
  apartmentOrHouse     String
  phoneNumber          String
  userId               String?
  productId            String
  createdAt            DateTime              @default(now())
  updatedAt            DateTime              @updatedAt
  color                String
  product              Product               @relation(fields: [productId], references: [id])
  user                 User?                 @relation(fields: [userId], references: [id])
  paymentDetailsByShop PaymentDetailsByShop?
}

model PaymentDetailsByShop {
  id            String        @id @default(uuid())
  amount        Float
  pi_number     String?
  paymemtStatus PaymemtStatus @default(pending)
  createAt      DateTime      @default(now())
  orderId       String        @unique
  order         Order         @relation(fields: [orderId], references: [id])
}

enum SuccessPage {
  message
  redirect
}
