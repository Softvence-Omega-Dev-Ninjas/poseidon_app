model Membership_owner {
  id                          String                        @id @default(uuid())
  ownerId                     String                        @unique
  createdAt                   DateTime                      @default(now())
  updatedAt                   DateTime                      @updatedAt
  enableMembership            Boolean                       @default(false)
  MembershipAccessToGallery   MembershipAccessToGallery[]   @relation("AccessToGallery")
  MembershipAccessToMessages  MembershipAccessToMessages[]  @relation("AccessToMessages")
  MembershipAccessToPosts     MembershipAccessToPosts[]     @relation("AccessToPosts")
  MembershipAccessToVideoCall MembershipAccessToVideoCall[] @relation("MembershipAccessToVideoCall")
  Membership_levels           Membership_levels[]
  owner                       User                          @relation(fields: [ownerId], references: [id], onDelete: Cascade)
}

model Membership_levels {
  id                         String                       @id @default(uuid())
  membershipId               String
  levelName                  String
  levelDescription           String?
  createdAt                  DateTime                     @default(now())
  updatedAt                  DateTime                     @updatedAt
  levelImage                 String
  Wellcome_note              String?
  titleName                  String
  isPublic                   Boolean                      @default(false)
  MembershipSubscriptionPlan MembershipSubscriptionPlan[]
  membership                 Membership_owner             @relation(fields: [membershipId], references: [id], onDelete: Cascade)
  zoomUrl                    String?
}

model MembershipSubscriptionPlan {
  id                       String                    @id @default(uuid())
  membershipLevelId        String
  duration                 Duration
  price                    Float
  createdAt                DateTime                  @default(now())
  updatedAt                DateTime                  @updatedAt
  CalligSubscriptionPlan   CalligSubscriptionPlan?
  GallerySubscriptionPlan  GallerySubscriptionPlan?
  membershipLevel          Membership_levels         @relation(fields: [membershipLevelId], references: [id], onDelete: Cascade)
  MessagesSubscriptionPlan MessagesSubscriptionPlan?
  PostsSubscriptionPlan    PostsSubscriptionPlan?

  @@unique([membershipLevelId, duration])
}

model CalligSubscriptionPlan {
  id                           String                     @id @unique @default(uuid())
  membershipSubscriptionPlanId String                     @unique
  duration                     Duration
  title                        String
  description                  String
  totalVideoCalls              Int                        @default(0)
  unlimitedVideoCalls          Boolean                    @default(false)
  MembershipSubscriptionPlan   MembershipSubscriptionPlan @relation(fields: [membershipSubscriptionPlanId], references: [id], onDelete: Cascade)
}

model MessagesSubscriptionPlan {
  id                           String                     @id @unique @default(uuid())
  membershipSubscriptionPlanId String                     @unique
  duration                     Duration
  title                        String
  description                  String
  totalMessages                Int                        @default(0)
  unlimitedMessages            Boolean                    @default(false)
  MembershipSubscriptionPlan   MembershipSubscriptionPlan @relation(fields: [membershipSubscriptionPlanId], references: [id], onDelete: Cascade)
}

model GallerySubscriptionPlan {
  id                           String                     @id @unique @default(uuid())
  membershipSubscriptionPlanId String                     @unique
  duration                     Duration
  title                        String
  description                  String
  AccessToGallery              Boolean                    @default(true)
  MembershipSubscriptionPlan   MembershipSubscriptionPlan @relation(fields: [membershipSubscriptionPlanId], references: [id], onDelete: Cascade)
}

model PostsSubscriptionPlan {
  id                           String                     @id @unique @default(uuid())
  membershipSubscriptionPlanId String                     @unique
  duration                     Duration
  title                        String
  description                  String
  AccessToPosts                Boolean                    @default(true)
  MembershipSubscriptionPlan   MembershipSubscriptionPlan @relation(fields: [membershipSubscriptionPlanId], references: [id], onDelete: Cascade)
}

enum Duration {
  ONE_MONTH
  ONE_YEAR
}
