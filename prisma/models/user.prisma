model User {
  id              String         @id @unique @default(uuid())
  username        String         @unique
  provider        String         @default("credentials") // Authentication provider credentials, google, facebook, etc.
  email           String
  password        String?
  otp             String?
  varify          Boolean        @default(false)
  deactivate      Boolean        @default(false)
  role            Roles          @default(user)
  stripeAccountId String?
  comments        Comment[]
  images          Image[]
  imagescomments  ImageComment[]
  imageslikes     ImageLike[]
  likes           Like[]
  orders          Order[]
  posts           Post[]
  profile         Profile?
  shop            Shop?

  // supporter card system
  support_cart_layout SupportCartLayout?
  author_supportor    SupporterPay[]     @relation("author_supportor")
  supporter           SupporterPay[]

  // Memberships
  memberships_owner Membership_owner?

  // messages system
  conversations1 Conversation[] @relation("User1Conversations")
  conversations2 Conversation[] @relation("User2Conversations")

  sentMessages     Message[] @relation("SentMessages")
  receivedMessages Message[] @relation("ReceivedMessages")

  //services
  serviceOrders ServiceOrder[] @relation("UserServiceOrders")
  serviceSeller ServiceOrder[] @relation("ServiceSeller")

  productCategories ProductCategory[]

  services Service[]

  // permission access tb
  PermissionvideoCallAccessUser      PermissionVideoCallAccess[] @relation("PermissionVideoCallAccessUser")
  PermissionvideoCallAccessSupporter PermissionVideoCallAccess[] @relation("PermissionVideoCallAccessSupporter")
  PermissionMessagesAccessUser       PermissionMessagesAccess[]  @relation("PermissionMessagesAccessUser")
  PermissionMessagesAccessSupporter  PermissionMessagesAccess[]  @relation("PermissionMessagesAccessSupporter")
  PermissionGalleryAccessUser        PermissionGalleryAccess[]   @relation("PermissionGalleryAccessUser")
  PermissionGalleryAccessSupporter   PermissionGalleryAccess[]   @relation("PermissionGalleryAccessSupporter")
  PermissionPostsAccessUser          PermissionPostsAccess[]     @relation("PermissionPostsAccessUser")
  PermissionPostsAccessSupporter     PermissionPostsAccess[]     @relation("PermissionPostsAccessSupporter")

  // zoom
  zoomAccounts          ZoomAccount?
  // Relations
  userAvailability      UserAvailability[]
  userAppointments      Appointment[]      @relation("UserAppointments")
  supporterAppointments Appointment[]      @relation("SupporterAppointments")

  createdAt DateTime @default(now())

  followers Follower[] @relation("UserFollowing")
  following Follower[] @relation("UserFollowers")
  invited   Referral[] @relation("UserInvited")
  inviter   Referral[] @relation("UserInviter")
}

model Profile {
  id                  String  @id @unique @default(uuid())
  userid              String  @unique
  name                String
  image               String
  address             String?
  state               String?
  city                String?
  country             String?
  postcode            String?
  cover_image         String?
  description         String?
  cover_image_offsetY String? @default("0")
  user                User    @relation(fields: [userid], references: [id], onDelete: Cascade)
}

model Referral {
  id        String   @id @default(uuid())
  inviterId String
  invitedId String
  createdAt DateTime @default(now())
  discount  Int      @default(5)
  completed Boolean  @default(false)
  invited   User     @relation("UserInvited", fields: [invitedId], references: [id])
  inviter   User     @relation("UserInviter", fields: [inviterId], references: [id])
}

enum Roles {
  admin
  supporter
  user
}
